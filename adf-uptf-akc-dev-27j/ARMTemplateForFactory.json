{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-uptf-akc-dev-27j"
		},
		"ADLSlinkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSlinkedservice'"
		},
		"ADLSlinkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsuptfakcdevea5.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/business_tf_overview')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "demo",
							"value": "demo"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "03_business_reports"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-02T14:40:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/master_party_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flowgeo",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowgeo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawgeo": {
										"filename": "Geologia.parquet"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flowgeomeca",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flowgeo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowgeomeca",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawgeomeca": {
										"filename": "Geomecanica.parquet"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flowplan",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flowgeomeca",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowplan",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawplan": {
										"filename": "Planeamiento.parquet"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flowretra",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flowplan",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowretrasos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawretrasos": {
										"filename": "Retrasos_Operativos.parquet"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flowoport",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flowretra",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowopor",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"rawropo": {
										"filename": "Oportunidades.parquet"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "02_master_models"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-02T17:04:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowgeo')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowgeomeca')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowplan')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowretrasos')]",
				"[concat(variables('factoryId'), '/dataflows/dataflowopor')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/master_transaction_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "demo",
							"value": "demo"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "02_master_models"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-02T06:57:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute raw GA4",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "raw_know_core",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_master_party_core",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute raw GA4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "master_party_core",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute_business_tf_overview",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_master_party_core",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "business_tf_overview",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "01_raw_source"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-02T14:40:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/raw_know_core')]",
				"[concat(variables('factoryId'), '/pipelines/master_party_core')]",
				"[concat(variables('factoryId'), '/pipelines/business_tf_overview')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/raw_know_core')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copygeo1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Geologia.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Geologia.parquet"
								}
							}
						]
					},
					{
						"name": "Copyop1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copygeo1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Oportunidades.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Oportunidades.parquet"
								}
							}
						]
					},
					{
						"name": "Copyretraso1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copyop1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Retrasos_Operativos.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Retrasos_Operativos.parquet"
								}
							}
						]
					},
					{
						"name": "Copyplan1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copyretraso1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Planeamiento.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Planeamiento.parquet"
								}
							}
						]
					},
					{
						"name": "Copygeemeca1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copyplan1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Geomecanica.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference",
								"parameters": {
									"filename": "Geomecanica.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"demo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "01_raw_source"
				},
				"annotations": [],
				"lastPublishTime": "2023-05-02T13:19:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_traget_parqet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_master_source_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSlinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "data",
						"fileSystem": "master"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSlinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_traget_parqet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSlinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "data",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSlinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSlinkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSlinkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/irakclocal')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowgeo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference"
							},
							"name": "rawgeo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          NombredeEstructura as string,",
						"          FullYearBudget as string,",
						"          BudgetYTDApril as string,",
						"          ActualYTDApril as string,",
						"          Variacion1 as string,",
						"          Variacion2 as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawgeo",
						"rawgeo derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          NombredeEstructura = toString(NombredeEstructura),",
						"          FullYearBudget = toDouble(FullYearBudget),",
						"          BudgetYTDApril = toDouble(BudgetYTDApril),",
						"          ActualYTDApril = toDouble(ActualYTDApril),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          actualvsfullyear = toDouble(ActualYTDApril)-toDouble(FullYearBudget),",
						"          actualvsbudget = toDouble(ActualYTDApril)-toDouble(BudgetYTDApril),",
						"          area = 'geologia') ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_geo[n].parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_traget_parqet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowgeomeca')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference"
							},
							"name": "rawgeomeca"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          NombredeEstructura as string,",
						"          FullYearBudget as string,",
						"          BudgetYTDApril as string,",
						"          ActualYTDApril as string,",
						"          Variacion1 as string,",
						"          Variacion2 as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawgeomeca",
						"rawgeomeca derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          NombredeEstructura = toString(NombredeEstructura),",
						"          FullYearBudget = toDouble(FullYearBudget),",
						"          BudgetYTDApril = toDouble(BudgetYTDApril),",
						"          ActualYTDApril = toDouble(ActualYTDApril),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          actualvsfullyear = toDouble(ActualYTDApril)-toDouble(FullYearBudget),",
						"          actualvsbudget = toDouble(ActualYTDApril)-toDouble(BudgetYTDApril),",
						"          area = 'geomecanica') ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_geomeca[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_traget_parqet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowopor')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference"
							},
							"name": "rawropo"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          NombredeEstructura as string,",
						"          FullYearBudget as string,",
						"          BudgetYTDApril as string,",
						"          ActualYTDApril as string,",
						"          Variacion1 as string,",
						"          Variacion2 as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawropo",
						"rawropo derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          NombredeEstructura = toString(NombredeEstructura),",
						"          FullYearBudget = toDouble(FullYearBudget),",
						"          BudgetYTDApril = toDouble(BudgetYTDApril),",
						"          ActualYTDApril = toDouble(ActualYTDApril),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          actualvsfullyear = toDouble(ActualYTDApril)-toDouble(FullYearBudget),",
						"          actualvsbudget = toDouble(ActualYTDApril)-toDouble(BudgetYTDApril),",
						"          area = 'oportunidades') ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_opor[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_traget_parqet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowplan')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference"
							},
							"name": "rawplan"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          NombredeEstructura as string,",
						"          FullYearBudget as string,",
						"          BudgetYTDApril as string,",
						"          ActualYTDApril as string,",
						"          Variacion1 as string,",
						"          Variacion2 as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawplan",
						"rawplan derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          NombredeEstructura = toString(NombredeEstructura),",
						"          FullYearBudget = toDouble(FullYearBudget),",
						"          BudgetYTDApril = toDouble(BudgetYTDApril),",
						"          ActualYTDApril = toDouble(ActualYTDApril),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          actualvsfullyear = toDouble(ActualYTDApril)-toDouble(FullYearBudget),",
						"          actualvsbudget = toDouble(ActualYTDApril)-toDouble(BudgetYTDApril),",
						"          area = 'planeamiento') ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_plan[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_traget_parqet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowretrasos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_traget_parqet",
								"type": "DatasetReference"
							},
							"name": "rawretrasos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_master_source_parquet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Estimacion as string,",
						"          Estatus as string,",
						"          NombredeEstructura as string,",
						"          FullYearBudget as string,",
						"          BudgetYTDApril as string,",
						"          ActualYTDApril as string,",
						"          Variacion1 as string,",
						"          Variacion2 as string,",
						"          Detalle as string,",
						"          Observacion as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> rawretrasos",
						"rawretrasos derive(Estimacion = toString(Estimacion),",
						"          Estatus = toString(Estatus),",
						"          NombredeEstructura = toString(NombredeEstructura),",
						"          FullYearBudget = toDouble(FullYearBudget),",
						"          BudgetYTDApril = toDouble(BudgetYTDApril),",
						"          ActualYTDApril = toDouble(ActualYTDApril),",
						"          Detalle = toString(Detalle),",
						"          Observacion = toString(Observacion),",
						"          actualvsfullyear = toDouble(ActualYTDApril)-toDouble(FullYearBudget),",
						"          actualvsbudget = toDouble(ActualYTDApril)-toDouble(BudgetYTDApril),",
						"          area = 'retrasos') ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     filePattern:'m_retrasos[n].parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_traget_parqet')]",
				"[concat(variables('factoryId'), '/datasets/ds_master_source_parquet')]"
			]
		}
	]
}